//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer for SQL Server tool using LINQ to SQL template.
// Code is generated on: 31/07/2024 19:31:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace BancoContext
{

    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "Banco")]
    public partial class BancoDataContext : System.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new System.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();

        partial void InsertTransacction(Transacction instance);
        partial void UpdateTransacction(Transacction instance);
        partial void DeleteTransacction(Transacction instance);
        partial void InsertUser(User instance);
        partial void UpdateUser(User instance);
        partial void DeleteUser(User instance);

        #endregion

        public BancoDataContext() :
        base(@"Data Source=localhost;Initial Catalog=Banco;Integrated Security=True;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public BancoDataContext(System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(@"Data Source=localhost;Initial Catalog=Banco;Integrated Security=True;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public BancoDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BancoDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BancoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BancoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public System.Data.Linq.Table<Account> Accounts
        {
            get
            {
                return this.GetTable<Account>();
            }
        }

        public System.Data.Linq.Table<Transacction> Transacctions
        {
            get
            {
                return this.GetTable<Transacction>();
            }
        }

        public System.Data.Linq.Table<User> Users
        {
            get
            {
                return this.GetTable<User>();
            }
        }
    }
}

namespace BancoContext
{

    /// <summary>
    /// There are no comments for BancoContext.Account in the schema.
    /// </summary>
    [Table(Name = @"dbo.Account")]
    public partial class Account
    {
        #pragma warning disable 0649

        private System.Guid _Id;

        private string _NumCuenta;

        private decimal _Balance;

        private System.Guid _IdUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnNumCuentaChanging(string value);
        partial void OnNumCuentaChanged();
        partial void OnBalanceChanging(decimal value);
        partial void OnBalanceChanged();
        partial void OnIdUsuarioChanging(System.Guid value);
        partial void OnIdUsuarioChanged();
        #endregion

        public Account()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "UNIQUEIDENTIFIER NOT NULL")]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumCuenta in the schema.
        /// </summary>
        [Column(Storage = "_NumCuenta", CanBeNull = false, DbType = "VARCHAR(150) NOT NULL")]
        public string NumCuenta
        {
            get
            {
                return this._NumCuenta;
            }
            set
            {
                if (this._NumCuenta != value)
                {
                    this._NumCuenta = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Balance in the schema.
        /// </summary>
        [Column(Storage = "_Balance", CanBeNull = false, DbType = "DECIMAL NOT NULL")]
        public decimal Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if (this._Balance != value)
                {
                    this._Balance = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Storage = "_IdUsuario", CanBeNull = false, DbType = "UNIQUEIDENTIFIER NOT NULL")]
        public System.Guid IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this._IdUsuario = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BancoContext.Transacction in the schema.
    /// </summary>
    [Table(Name = @"dbo.Transacction")]
    public partial class Transacction : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Guid _Id;

        private string _NumCuentaOrg;

        private string _NumCuentaDst;

        private decimal _Cant;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnNumCuentaOrgChanging(string value);
        partial void OnNumCuentaOrgChanged();
        partial void OnNumCuentaDstChanging(string value);
        partial void OnNumCuentaDstChanged();
        partial void OnCantChanging(decimal value);
        partial void OnCantChanged();
        #endregion

        public Transacction()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "UNIQUEIDENTIFIER NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumCuentaOrg in the schema.
        /// </summary>
        [Column(Storage = "_NumCuentaOrg", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string NumCuentaOrg
        {
            get
            {
                return this._NumCuentaOrg;
            }
            set
            {
                if (this._NumCuentaOrg != value)
                {
                    this.OnNumCuentaOrgChanging(value);
                    this.SendPropertyChanging("NumCuentaOrg");
                    this._NumCuentaOrg = value;
                    this.SendPropertyChanged("NumCuentaOrg");
                    this.OnNumCuentaOrgChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumCuentaDst in the schema.
        /// </summary>
        [Column(Storage = "_NumCuentaDst", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string NumCuentaDst
        {
            get
            {
                return this._NumCuentaDst;
            }
            set
            {
                if (this._NumCuentaDst != value)
                {
                    this.OnNumCuentaDstChanging(value);
                    this.SendPropertyChanging("NumCuentaDst");
                    this._NumCuentaDst = value;
                    this.SendPropertyChanged("NumCuentaDst");
                    this.OnNumCuentaDstChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cant in the schema.
        /// </summary>
        [Column(Storage = "_Cant", CanBeNull = false, DbType = "DECIMAL NOT NULL")]
        public decimal Cant
        {
            get
            {
                return this._Cant;
            }
            set
            {
                if (this._Cant != value)
                {
                    this.OnCantChanging(value);
                    this.SendPropertyChanging("Cant");
                    this._Cant = value;
                    this.SendPropertyChanged("Cant");
                    this.OnCantChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BancoContext.User in the schema.
    /// </summary>
    [Table(Name = @"dbo.Users")]
    public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Passwd;

        private string _Dni;

        private System.Guid _Id;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnPasswdChanging(string value);
        partial void OnPasswdChanged();
        partial void OnDniChanging(string value);
        partial void OnDniChanged();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        #endregion

        public User()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Passwd in the schema.
        /// </summary>
        [Column(Storage = "_Passwd", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string Passwd
        {
            get
            {
                return this._Passwd;
            }
            set
            {
                if (this._Passwd != value)
                {
                    this.OnPasswdChanging(value);
                    this.SendPropertyChanging("Passwd");
                    this._Passwd = value;
                    this.SendPropertyChanged("Passwd");
                    this.OnPasswdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [Column(Storage = "_Dni", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string Dni
        {
            get
            {
                return this._Dni;
            }
            set
            {
                if (this._Dni != value)
                {
                    this.OnDniChanging(value);
                    this.SendPropertyChanging("Dni");
                    this._Dni = value;
                    this.SendPropertyChanged("Dni");
                    this.OnDniChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "UNIQUEIDENTIFIER NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
